require_relative "../lib/uloha4"
describe "Uloha4 - ", "testy" do

  it "Nacteni sifrovaneho souboru" do
    s = Desifrator.new()
    s.nacti("zasifrovano")
    pole = ["1", "J", "K", "J", "'", "p", "z", "'", "{", "o", "l", "'", "{", "y", "h", "k", "l", "t", "h", "y", "r", "'", "v", "m", "'", "{", "o", "l", "'", "J", "v", "u", "{", "y", "v", "s", "'", "K", "h", "{", "h", "'", "J", "v", "y", "w", "v", "y", "h", "{", "p", "v", "u", "5", "\n", "1", "P", "I", "T", "'", "p", "z", "'", "h", "'", "{", "y", "h", "k", "l", "t", "h", "y", "r", "'", "v", "m", "'", "{", "o", "l", "'", "P", "u", "{", "l", "y", "u", "h", "{", "p", "v", "u", "h", "s", "'", "I", "|", "z", "p", "u", "l", "z", "z", "'", "T", "h", "j", "o", "p", "u", "l", "'", "J", "v", "y", "w", "v", "y", "h", "{", "p", "v", "u", "5", "\n", "1", "K", "L", "J", "'", "p", "z", "'", "{", "o", "l", "'", "{", "y", "h", "k", "l", "t", "h", "y", "r", "'", "v", "m", "'", "{", "o", "l", "'", "K", "p", "n", "p", "{", "h", "s", "'", "L", "x", "|", "p", "w", "t", "l", "u", "{", "'", "J", "v", "y", "w", "v", "y", "h", "{", "p", "v", "u", "5"]
    s.pole_znaku.should == pole
  end

  it "Nacteni ascii znaku" do
    s = Desifrator.new()
    s.nactiascii("ascii")
    pole = [" ", "!", "\"", "#", "$", "%", "&", "'", "(", ")", "*", "+", ",", "-", ".", "/", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ":", ";", "<", "=", ">", "?", "@", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "[", "\\", "]", "^", "_", "`", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "{", "|", "}", "~"]
    s.pole_ascii.should == pole
  end

  it "Zaporne desifrovani" do
    s = Desifrator.new()
    s.nacti("zasifrovano")
    s.nactiascii("ascii")
    s.desifruj(-7)
    pole = ["*", "C", "D", "C", " ", "i", "s", " ", "t", "h", "e", " ", "t", "r", "a", "d", "e", "m", "a", "r", "k", " ", "o", "f", " ", "t", "h", "e", " ", "C", "o", "n", "t", "r", "o", "l", " ", "D", "a", "t", "a", " ", "C", "o", "r", "p", "o", "r", "a", "t", "i", "o", "n", ".", "\n", "*", "I", "B", "M", " ", "i", "s", " ", "a", " ", "t", "r", "a", "d", "e", "m", "a", "r", "k", " ", "o", "f", " ", "t", "h", "e", " ", "I", "n", "t", "e", "r", "n", "a", "t", "i", "o", "n", "a", "l", " ", "B", "u", "s", "i", "n", "e", "s", "s", " ", "M", "a", "c", "h", "i", "n", "e", " ", "C", "o", "r", "p", "o", "r", "a", "t", "i", "o", "n", ".", "\n", "*", "D", "E", "C", " ", "i", "s", " ", "t", "h", "e", " ", "t", "r", "a", "d", "e", "m", "a", "r", "k", " ", "o", "f", " ", "t", "h", "e", " ", "D", "i", "g", "i", "t", "a", "l", " ", "E", "q", "u", "i", "p", "m", "e", "n", "t", " ", "C", "o", "r", "p", "o", "r", "a", "t", "i", "o", "n", "."]
    s.vysledek.should == pole
  end

  it "Kladne desifrovani" do
    s = Desifrator.new()
    s.nacti("zasifrovano")
    s.nactiascii("ascii")
    s.desifruj(7)
    pole = ["8", "Q", "R", "Q", ".", "w", "\"", ".", "#", "v", "s", ".", "#", "!", "o", "r", "s", "{", "o", "!", "y", ".", "}", "t", ".", "#", "v", "s", ".", "Q", "}", "|", "#", "!", "}", "z", ".", "R", "o", "#", "o", ".", "Q", "}", "!", "~", "}", "!", "o", "#", "w", "}", "|", "<", "\n", "8", "W", "P", "[", ".", "w", "\"", ".", "o", ".", "#", "!", "o", "r", "s", "{", "o", "!", "y", ".", "}", "t", ".", "#", "v", "s", ".", "W", "|", "#", "s", "!", "|", "o", "#", "w", "}", "|", "o", "z", ".", "P", "$", "\"", "w", "|", "s", "\"", "\"", ".", "[", "o", "q", "v", "w", "|", "s", ".", "Q", "}", "!", "~", "}", "!", "o", "#", "w", "}", "|", "<", "\n", "8", "R", "S", "Q", ".", "w", "\"", ".", "#", "v", "s", ".", "#", "!", "o", "r", "s", "{", "o", "!", "y", ".", "}", "t", ".", "#", "v", "s", ".", "R", "w", "u", "w", "#", "o", "z", ".", "S", " ", "$", "w", "~", "{", "s", "|", "#", ".", "Q", "}", "!", "~", "}", "!", "o", "#", "w", "}", "|", "<"]
    s.vysledek.should == pole
  end

  it "Nulove desifrovani" do
    s = Desifrator.new()
    s.nacti("zasifrovano")
    s.nactiascii("ascii")
    s.desifruj(0)
    pole = ["1", "J", "K", "J", "'", "p", "z", "'", "{", "o", "l", "'", "{", "y", "h", "k", "l", "t", "h", "y", "r", "'", "v", "m", "'", "{", "o", "l", "'", "J", "v", "u", "{", "y", "v", "s", "'", "K", "h", "{", "h", "'", "J", "v", "y", "w", "v", "y", "h", "{", "p", "v", "u", "5", "\n", "1", "P", "I", "T", "'", "p", "z", "'", "h", "'", "{", "y", "h", "k", "l", "t", "h", "y", "r", "'", "v", "m", "'", "{", "o", "l", "'", "P", "u", "{", "l", "y", "u", "h", "{", "p", "v", "u", "h", "s", "'", "I", "|", "z", "p", "u", "l", "z", "z", "'", "T", "h", "j", "o", "p", "u", "l", "'", "J", "v", "y", "w", "v", "y", "h", "{", "p", "v", "u", "5", "\n", "1", "K", "L", "J", "'", "p", "z", "'", "{", "o", "l", "'", "{", "y", "h", "k", "l", "t", "h", "y", "r", "'", "v", "m", "'", "{", "o", "l", "'", "K", "p", "n", "p", "{", "h", "s", "'", "L", "x", "|", "p", "w", "t", "l", "u", "{", "'", "J", "v", "y", "w", "v", "y", "h", "{", "p", "v", "u", "5"]
    s.vysledek.should == pole
  end

end
